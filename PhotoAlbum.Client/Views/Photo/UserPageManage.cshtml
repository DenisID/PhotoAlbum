@model PhotoAlbum.Client.Models.UserPageViewModel

@*Bundles for rating stars*@
@Scripts.Render("~/bundles/rateyo/myAlias")
@Styles.Render("~/Content/rateyo/myAlias")
@Scripts.Render("~/Scripts/myModal");

@*Sort order*@
<div class="sortOrder">
    <span class="sortNewFirst">
        @Html.RadioButtonFor(m => m.SortPhoto.Sorting, Model.SortPhoto.ByCreationDate, new { Checked = "checked" }) @Resources.ResourceEN.NewFirst
    </span>
    <span class="sortPopularFirst">
        @Html.RadioButtonFor(m => m.SortPhoto.Sorting, Model.SortPhoto.ByRating) @Resources.ResourceEN.PopularFirst
    </span>
</div>

@{
    Model.SortPhoto.Sorting = Model.SortPhoto.ByCreationDate;
}

@*Modal window*@
<div class="modal fade" id="myModal" tabindex="-1" role="dialog"
     aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body" id="form-container"><div class="te">Please wait...</div></div>
            <div class="modal-footer">
                <button type="button" class="dialog-window btn btn-primary btn-large" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@*IFrame*@
@*<iframe name="iframe1" width="600" height="400" src="/photo/createphoto" frameborder="1" scrolling="no"></iframe>*@

@*"Add new pohoto" button*@
@Html.ActionLink(Resources.ResourceEN.AddNewPhoto, "CreatePhoto", "Photo", new { @returnUrl = Request.Url.AbsolutePath }, new { @class = "addNewPhotoButton dialog-window btn btn-primary btn-large" })

@*Main photo content section*@
<div id="sectionPhotos"></div>

@*Load indicator*@
<div class="loadingContainer">
    <img id="loading" src="~/Content/img/ajax-loader.gif" alt="" />
</div>

@*Suppotr section*@
<input type="hidden" id="lastRowId" value="1" />

<script>
    $.ajaxSetup({
        beforeSend: function () {
            $("#loading").show();
        },
        complete: function () {
            $("#loading").hide();
        }
    });

    // On "class = dialog-window" button click (call modal window)
    $(document).ready(function () {
        $("body").on("click", "a.dialog-window", null, function (e) {

            e.preventDefault();

            var $link = $(this);
            var title = $link.text();
            $('#myModal .modal-title').html(title);

            var url = $(this).attr('href');
            if (url.indexOf('#') == 0) {
                $('#myModal').modal('show');
            }
            else {
                $.get(url, function (data) {
                    $('#myModal .te').html(data);
                    $('#myModal').modal();
                }).then(function () { $('input:text:visible:first').focus(); });
            }

        });

        $("#myModal").on("submit", "#formForModal", function (e) {

            e.preventDefault();

            var form = $(this);

            $.ajax({
                url: form.attr("action"),
                method: form.attr("method"),
                data: new FormData(this),
                success: function (partialResult) {
                    //if (paritalResult == null) {
                    //    location.reload();
                    //}
                    $('#myModal .te').html(partialResult);
                },
                cache: false,
                contentType: false,
                processData: false
            });

        });

    });

    // Global variables
    var userVotes = null;
    var sorting = "@Model.SortPhoto.Sorting";

    // On radio button change
    $('input[name="SortPhoto.Sorting"]:radio').change(function () {
        $('#sectionPhotos').empty();
        $("#lastRowId").val(1);
        GetAllCurrentUserVotes();
        sorting = $('input[name="SortPhoto.Sorting"]:checked').val();
        GetPhotosFromNextSection(false, sorting);
    });

    // Get all current user votes
    function GetAllCurrentUserVotes() {
        $.ajax({
        type: 'GET',
        url: '/Photo/GetAllUserVotes',
        dataType: 'json',
        success: function (jsonData) {
            if (jsonData == null) {
                return;
            }
            userVotes = jsonData;
        },
        error: function (jsonData) {
            userVotes = null;
        }
        });
    }

    GetAllCurrentUserVotes();

    // Get default photo data
    $(document).ready(function () {
        GetPhotosFromNextSection(false, sorting);
    });

    // Get next photo data automatic
    $(window).scroll(function () {
        if ($(window).scrollTop() == $(document).height() - $(window).height()) {
            GetPhotosFromNextSection(true, sorting);
        }
    });

    var isRequestPending = false;
    var isPhotoAvaiable = true;

    // Common handler
    function GetPhotosFromNextSection(scrollPage, sort) {
        var lastRowId = ($("#lastRowId").val() * 1);
        var isHistoryBack = (lastRowId > 1 && !scrollPage);

        if (!isRequestPending && isPhotoAvaiable) {
            isRequestPending = true;
            $.ajax({
                type: 'GET',
                url: '/Photo/GetUserPhotos?lastRowId=' + lastRowId + '&isHistoryBack=' + isHistoryBack + '&Sorting=' + sort + '&userName=' + '@Model.UserName',
                dataType: 'json',
                success: function (jsonData) {
                    isRequestPending = false;
                    var rowid = lastRowId + 1;

                    if (jsonData.length === 0) {
                        isPhotoAvaiable = false;

                        if (lastRowId === 1) {
                            var noPhotoYetPlaceholder = '<div class="noPhotoYetPlaceholder">' + '@Resources.ResourceEN.NoPhotosYet' + '</div>';
                            $('#sectionPhotos').append(noPhotoYetPlaceholder);
                        }

                        return;
                    }

                    $.each(jsonData, function (index, item) {
                        var sectionIndex = (isHistoryBack ? index + 1 : rowid);
                        var articleData = "";
                        articleData += '<div class="mainContainer">' +
                                            '<div class="photoContainer"><img src="/Photo/GetImageById/' + item.Id + '" /></div>' +
                                            '<div class="photoHeader">' +
                                                '<span class ="photoTitle">' +
                                                    item.Title +
                                                '</span>' +
                                                '<span class ="photoEditButton">' +
                                                    '<a href="/Photo/EditPhoto/' + item.Id + '?returnUrl=%2F' + '@ViewBag.UserName' + '%2F' + '@ViewBag.Manage' + '" class="dialog-window btn btn-primary btn-large">' + '@Resources.ResourceEN.EditPhoto' + '</a>' +
                                                '</span>' +
                                                '<span class ="photoDeleteButton">' +
                                                    '<a href="/Photo/DeletePhotoById/' + item.Id + '" class="btn btn-primary btn-large">' + '@Resources.ResourceEN.DeletePhoto' + '</a>' +
                                                '</span>' +
                                            '</div>' +
                                            '<div class="photoDescription">' + item.Description + '</div>' +
                                            '<div class="photoOwnerAndDate">' +
                                                '<span class="photoOwner">' + 'Added by ' + '<a href="/' + item.OwnerName + '">' + item.OwnerName + '</a>' + '</span>' +
                                                '<span class="photoDate">' +
                                                    Date(parseInt(item.CreationDate.replace(/\/Date\((-?\d+)\)\//gi, "$1"))).toString().slice(0, 24) +
                                                '</span>' +
                                            '</div>' +
                                            '<div class="photoRatings">' +
                                                '<div class="photoRating">' +
                                                    '<div class="ratingText">' + '@Resources.ResourceEN.Rating: ' + '</div>' +
                                                    '<div class="starRating">' +
                                                        '<div id="photoRatingId_' + item.Id + '"></div>' +
                                                    '</div>' +
                                                '</div>' +
                                                '<div class="photoUserRating">' +
                                                    '<div class="myRatingText">' + '@Resources.ResourceEN.MyRating: ' + '</div>' +
                                                    '<div class="starRating">' +
                                                        '<div id="photoMyRatingId_' + item.Id + '"></div>' +
                                                    '</div>' +
                                                '</div>' +
                                            '</div>' +
                                       '</div>';
                        $('#sectionPhotos').append(articleData);

                        $(function BuildRatingStar() {
                            $('#photoRatingId_' + item.Id).rateYo({
                                rating: Math.round(item.Rating),
                                fullStar: true,
                                readOnly: true
                            });
                        });

                        $(function BuildUserRatingStar() {
                            let photoRating = 0;
                            if (userVotes != null) {
                                $.each(userVotes, function (index, voteItem) {
                                    if (voteItem.PhotoId === item.Id) {
                                        photoRating = voteItem.Rating;
                                    };
                                });
                            };

                            $('#photoMyRatingId_' + item.Id).rateYo({
                                rating: Math.round(photoRating),
                                fullStar: true,
                            })
                            // On user rating change
                            .on("rateyo.set", function (e, data) {
                                $.post(
                                    "/Photo/CastPhotoVote",
                                    {
                                        PhotoId: item.Id,
                                        Rating: data.rating
                                    },
                                    function onSuccess() {
                                        // Change rating star
                                        $.ajax({
                                            type: 'GET',
                                            url: '/Photo/GetPhotoRating/' + item.Id,
                                            dataType: 'json',
                                            success: function (jsonData) {
                                                if (jsonData == null) {
                                                    return;
                                                }

                                                let photoRating = jsonData.Rating;

                                                $('#photoRatingId_' + item.Id).rateYo("rating", Math.round(photoRating));
                                            },
                                            error: function (jsonData) {
                                                window.location.href = '/Home/Error?message=' + jsonData.responseJSON.ErrorMessage;
                                            }
                                        });
                                    }
                                );
                            });
                        });
                    });

                    if (!isHistoryBack) {
                        $("#lastRowId").val(rowid);
                    }
                },
                error: function (jsonData) {
                    isRequestPending = false;
                    if (jsonData.responseJSON.ErrorMessage) {
                        window.location.href = '/Home/Error?message=' + jsonData.responseJSON.ErrorMessage;
                    }
                    else {
                        window.location.href = '/Home/Error?message=' + '@Resources.ResourceEN.ErrorOops';
                    }
                }
            });
        };

        return false;
    }
</script>